<?php

namespace App\Http\Controllers;

use App\Models\ContactRequest;
use Illuminate\Http\Request;
use Illuminate\Support\Facades\Log;
use Telegram\Bot\Laravel\Facades\Telegram;

class ContactRequestController extends Controller
{
    public function store(Request $request)
    {
        $request->validate([
            'phone' => 'required|string|max:20',
            'comment' => 'nullable|string|max:1000',
        ]);

        try {
            // –°–æ–∑–¥–∞–µ–º –∑–∞—è–≤–∫—É –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö
            $contactRequest = ContactRequest::create([
                'phone' => $request->phone,
                'comment' => $request->comment,
                'ip_address' => $request->ip(),
                'user_agent' => $request->userAgent(),
            ]);

            // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –≤ —Ç–µ–ª–µ–≥—Ä–∞–º
            $this->sendToTelegram($contactRequest);

            return response()->json([
                'success' => true,
                'message' => '–ó–∞—è–≤–∫–∞ —É—Å–ø–µ—à–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞! –ú—ã —Å–≤—è–∂–µ–º—Å—è —Å –≤–∞–º–∏ –≤ –±–ª–∏–∂–∞–π—à–µ–µ –≤—Ä–µ–º—è.'
            ]);
        } catch (\Exception $e) {
            Log::error('–û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ –∑–∞—è–≤–∫–∏: ' . $e->getMessage());
            
            return response()->json([
                'success' => false,
                'message' => '–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ –∑–∞—è–≤–∫–∏. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑.'
            ], 500);
        }
    }

    private function sendToTelegram(ContactRequest $contactRequest)
    {
        try {
            $chatId = env('TELEGRAM_CONTACT_CHAT_ID');
            
            if (!$chatId) {
                Log::warning('TELEGRAM_CONTACT_CHAT_ID –Ω–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω –≤ .env');
                return;
            }

            $message = "üîî <b>–ù–æ–≤–∞—è –∑–∞—è–≤–∫–∞ —Å —Å–∞–π—Ç–∞ Docwise</b>\n\n";
            $message .= "üì± <b>–¢–µ–ª–µ—Ñ–æ–Ω:</b> <code>" . $contactRequest->phone . "</code>\n";
            
            if ($contactRequest->comment) {
                $message .= "üí¨ <b>–ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π:</b>\n" . htmlspecialchars($contactRequest->comment) . "\n";
            }
            
            $message .= "\nüïê <b>–í—Ä–µ–º—è:</b> " . $contactRequest->created_at->format('d.m.Y H:i:s');
            $message .= "\nüåê <b>IP:</b> <code>" . $contactRequest->ip_address . "</code>";
            $message .= "\nüìä <b>ID –∑–∞—è–≤–∫–∏:</b> #" . $contactRequest->id;

            Telegram::sendMessage([
                'chat_id' => $chatId,
                'text' => $message,
                'parse_mode' => 'HTML'
            ]);

            // –û–±–Ω–æ–≤–ª—è–µ–º —Å—Ç–∞—Ç—É—Å –æ—Ç–ø—Ä–∞–≤–∫–∏
            $contactRequest->update([
                'is_sent_to_telegram' => true,
                'sent_to_telegram_at' => now(),
            ]);

        } catch (\Exception $e) {
            Log::error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ –≤ —Ç–µ–ª–µ–≥—Ä–∞–º: ' . $e->getMessage());
        }
    }
}
