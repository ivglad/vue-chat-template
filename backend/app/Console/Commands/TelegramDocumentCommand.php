<?php

namespace App\Console\Commands;

use App\Models\User;
use App\Models\Document;
use App\Services\TelegramFormatterService;
use Telegram\Bot\Commands\Command;

class TelegramDocumentCommand extends Command
{
    use TelegramUserTrait;

    protected string $name = 'docs';
    protected string $description = '–ü–æ–ª—É—á–∏—Ç—å —Å–ø–∏—Å–æ–∫ –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤';

    public function handle()
    {
        $telegramUser = $this->getUpdate()->getMessage()->getFrom();
        $user = $this->findTelegramUser($telegramUser);

        if (!$user) {
            $this->replyWithMessage([
                'text' => 'üîÑ –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, —Å–Ω–∞—á–∞–ª–∞ –≤—ã–ø–æ–ª–Ω–∏—Ç–µ –∫–æ–º–∞–Ω–¥—É /start –¥–ª—è —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ –≤ —Å–∏—Å—Ç–µ–º–µ.'
            ]);
            return;
        }

        // –û–±–Ω–æ–≤–ª—è–µ–º –≤—Ä–µ–º—è –ø–æ—Å–ª–µ–¥–Ω–µ–π –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏
        $this->updateUserLastSeen($user);

        // –ü–æ–ª—É—á–∞–µ–º –¥–æ–∫—É–º–µ–Ω—Ç—ã –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –Ω–∞–ø—Ä—è–º—É—é
        $userDocuments = Document::where('user_id', $user->id)->get();
        
        // –ü–æ–ª—É—á–∞–µ–º –¥–æ–∫—É–º–µ–Ω—Ç—ã –ø–æ —Ä–æ–ª—è–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        $userRoles = $user->roles()->pluck('id')->toArray();
        $roleDocuments = Document::whereHas('roles', function($query) use ($userRoles) {
            $query->whereIn('roles.id', $userRoles);
        })->get();

        // –û–±—ä–µ–¥–∏–Ω—è–µ–º –¥–æ–∫—É–º–µ–Ω—Ç—ã
        $documents = $userDocuments->merge($roleDocuments)->unique('id');

        if ($documents->isEmpty()) {
            $message = "üìö –£ –≤–∞—Å –Ω–µ—Ç –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤.\n\n";
            $message .= "–î–ª—è —Ä–∞–±–æ—Ç—ã —Å —Å–∏—Å—Ç–µ–º–æ–π:\n";
            $message .= "‚Ä¢ –ó–∞–≥—Ä—É–∑–∏—Ç–µ –¥–æ–∫—É–º–µ–Ω—Ç—ã —á–µ—Ä–µ–∑ –∞–¥–º–∏–Ω-–ø–∞–Ω–µ–ª—å\n";
            $message .= "‚Ä¢ –ó–∞–¥–∞–≤–∞–π—Ç–µ –≤–æ–ø—Ä–æ—Å—ã";
            
            $this->replyWithMessage(['text' => $message]);
            return;
        }

        $message = "üìö –í–∞—à–∏ –¥–æ—Å—Ç—É–ø–Ω—ã–µ –¥–æ–∫—É–º–µ–Ω—Ç—ã:\n\n";
        
        foreach ($documents as $index => $document) {
            $status = $document->embeddings_generated ? "‚úÖ" : "‚è≥";
            $message .= "<b><a href=\"" . $document->google_docs_url ."\">" . ($index + 1) . ". " . $document->title . "</a></b>\n";
            
            
        }

        // –†–∞–∑–±–∏–≤–∞–µ–º –¥–ª–∏–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –Ω–∞ —á–∞—Å—Ç–∏ –µ—Å–ª–∏ –Ω—É–∂–Ω–æ
        $messageParts = TelegramFormatterService::splitLongMessage($message);
        
        foreach ($messageParts as $part) {
            $this->replyWithMessage(['text' => $part, 'parse_mode' => 'HTML']);
            
            // –ù–µ–±–æ–ª—å—à–∞—è –ø–∞—É–∑–∞ –º–µ–∂–¥—É —á–∞—Å—Ç—è–º–∏
            if (count($messageParts) > 1) {
                usleep(500000); // 0.5 —Å–µ–∫—É–Ω–¥—ã
            }
        }
    }
}
