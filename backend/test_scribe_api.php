<?php

// –ü—Ä–æ—Å—Ç–æ–π —Å–∫—Ä–∏–ø—Ç –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è API —á–µ—Ä–µ–∑ Scribe –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—é

$baseUrl = 'http://localhost/api/v1';

// –ü–æ–ª—É—á–∞–µ–º —Ç–æ–∫–µ–Ω –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è (–∑–∞–º–µ–Ω–∏—Ç–µ –Ω–∞ —Ä–µ–∞–ª—å–Ω—ã–π)
$user = \App\Models\User::first();
if (!$user) {
    echo "‚ùå –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω\n";
    exit(1);
}

$token = $user->createToken('test-scribe')->plainTextToken;

echo "üß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ API —ç–Ω–¥–ø–æ–∏–Ω—Ç–∞ /chat/send\n";
echo "üë§ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: {$user->name}\n";
echo "üîë –¢–æ–∫–µ–Ω: " . substr($token, 0, 20) . "...\n\n";

$testCases = [
    [
        'name' => '–ë–µ–∑ document_ids (–∫–∞–∫ –≤ Scribe –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏–∏)',
        'data' => [
            'message' => '–†–∞—Å—Å–∫–∞–∂–∏ –æ —Å–æ–¥–µ—Ä–∂–∏–º–æ–º –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤'
        ]
    ],
    [
        'name' => '–° –ø—É—Å—Ç—ã–º –º–∞—Å—Å–∏–≤–æ–º document_ids',
        'data' => [
            'message' => '–†–∞—Å—Å–∫–∞–∂–∏ –æ —Å–æ–¥–µ—Ä–∂–∏–º–æ–º –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤',
            'document_ids' => []
        ]
    ]
];

foreach ($testCases as $testCase) {
    echo "--- {$testCase['name']} ---\n";
    
    $ch = curl_init();
    curl_setopt($ch, CURLOPT_URL, $baseUrl . '/chat/send');
    curl_setopt($ch, CURLOPT_POST, true);
    curl_setopt($ch, CURLOPT_POSTFIELDS, json_encode($testCase['data']));
    curl_setopt($ch, CURLOPT_HTTPHEADER, [
        'Content-Type: application/json',
        'Authorization: Bearer ' . $token,
        'Accept: application/json'
    ]);
    curl_setopt($ch, CURLOPT_RETURNTRANSFER, true);
    
    $response = curl_exec($ch);
    $httpCode = curl_getinfo($ch, CURLINFO_HTTP_CODE);
    curl_close($ch);
    
    echo "HTTP Code: $httpCode\n";
    
    if ($httpCode === 200) {
        $data = json_decode($response, true);
        if ($data && isset($data['success']) && $data['success']) {
            echo "‚úÖ –ó–∞–ø—Ä–æ—Å —É—Å–ø–µ—à–µ–Ω\n";
            echo "üìù –û—Ç–≤–µ—Ç: " . substr($data['data']['bot_response']['message'], 0, 100) . "...\n";
        } else {
            echo "‚ùå –û—à–∏–±–∫–∞ –≤ –æ—Ç–≤–µ—Ç–µ: " . ($data['message'] ?? '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –æ—à–∏–±–∫–∞') . "\n";
        }
    } else {
        echo "‚ùå HTTP –æ—à–∏–±–∫–∞\n";
        echo "Response: " . substr($response, 0, 200) . "...\n";
    }
    echo "\n";
}

// –£–¥–∞–ª—è–µ–º —Ç–µ—Å—Ç–æ–≤—ã–π —Ç–æ–∫–µ–Ω
$user->tokens()->where('name', 'test-scribe')->delete();

echo "‚úÖ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ!\n";